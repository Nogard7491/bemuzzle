@import "../vars/all";

$grid-column-number: 12 !default;
$grid-gap: $margin !default;
$grid-screen-sizes: $screen-sizes !default;
$grid-horizontal-aligns: (
        start: start,
        center: center,
        end: end,
        stretch: stretch,
) !default;
$grid-vertical-aligns: (
        start: start,
        center: center,
        end: end,
        stretch: stretch,
) !default;

.grid {
  display: grid;

  &_gap {
    grid-gap: $grid-gap;
  }

  &__row {
    display: grid;
    grid-template-columns: repeat($grid-column-number, percentage(1 / $grid-column-number));

    &_gap {
      grid-gap: $grid-gap;
      grid-template-columns: repeat($grid-column-number, calc(100% / #{$grid-column-number} - #{$grid-gap} + #{$grid-gap} / #{$grid-column-number}));
    }

    @each $key, $value in $grid-vertical-aligns {
      &_horizontal_#{$key} {
        justify-items: $value;
      }
    }

    @each $key, $value in $grid-vertical-aligns {
      &_vertical_#{$key} {
        align-items: $value;
      }
    }
  }

  &__col {
    grid-column-start: auto;

    @for $i from 1 through $grid-column-number {
      &_#{$i} {
        grid-column-end: span $i;
      }
    }

    @for $i from 2 through $grid-column-number {
      &_offset_#{$i - 1} {
        grid-column-start: $i;
      }
    }
  }

  @each $screen-key, $screen-value in $grid-screen-sizes {

    @media screen and (max-width: $screen-value) {

      @for $i from 1 through $grid-column-number {
        &__col_#{$i}\@#{$screen-key} {
          grid-column-end: span $i;
        }
      }

      @each $horizontal-align-key, $horizontal-align-value in $grid-horizontal-aligns {
        &__row_horizontal_#{$horizontal-align-key}\@#{$screen-key} {
          justify-items: $horizontal-align-value;
        }
      }

      @each $vertical-align-key, $vertical-align-value in $grid-vertical-aligns {
        &__row_vertical_#{$vertical-align-key}\@#{$screen-key} {
          align-items: $vertical-align-value;
        }
      }
    }
  }
}
